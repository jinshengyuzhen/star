<!DOCTYPE html>
<html>
<head>
<meta charset="GB2312">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="zh-CN" />
    <link rel="shortcut icon" href="http://mat1.gtimg.com/www/icon/favicon.ico"/>
    <title>浩瀚星空</title>
    </head>
    <body>

<div class="header" id="canvas_wrap" style="display:;">
    <canvas id="canvas"></canvas>
    </div>
    <script type="text/javascript">

var canvasSupport = !!document.createElement('canvas').getContext;
if (canvasSupport) {
    /*兼容不支持requestAnimationFrame的浏览器*/
    (function() {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
        }
        if (!window.requestAnimationFrame) window.requestAnimationFrame = function(callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function() {
                    callback(currTime + timeToCall);
                },
                timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
        if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
    } ());

    var canvas = document.getElementById('canvas'),
        ctx = canvas.getContext('2d'),
        w = canvas.width = document.body.offsetWidth,
    //h = canvas.height = window.innerHeight,
        h = canvas.height = 755,
        hue = 217,
        stars = [],
        count = 0,
        maxStars = 300;//星星个数

    /*canvas2 是单个星星的效果*/
    var canvas2 = document.createElement('canvas'),
        ctx2 = canvas2.getContext('2d');
    canvas2.width = 100;
    canvas2.height = 100;
    var half = canvas2.width / 2,
        gradient2 = ctx2.createRadialGradient(half, half, 0, half, half, half);
    gradient2.addColorStop(0.025, '#CCC');
    gradient2.addColorStop(0.1, 'hsl(' + hue + ', 61%, 33%)');
    gradient2.addColorStop(0.25, 'hsl(' + hue + ', 64%, 6%)');
    gradient2.addColorStop(1, 'transparent');
    ctx2.fillStyle = gradient2;
    ctx2.beginPath();
    ctx2.arc(half, half, half, 0, Math.PI * 2);
    ctx2.fill();

    /*img是标题文字的效果*/
    var img = new Image();
    //img.src = 'http://mat1.gtimg.com/www/images/qq2012/festival/topic/plutotext.png';
    var imgWidth = 606;
    var imgHeight = 162;
    var sx = w / 2 - imgWidth / 2;
    var sy = h / 2 - imgHeight / 2;

    /*取两个数之间的随机数*/
    function random(min, max) {
        if (arguments.length < 2) {
            max = min;
            min = 0;
        }
        if (min > max) {
            var hold = max;
            max = min;
            min = hold;
        }
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    /*星星移动范围*/
    function maxOrbit(x, y) {
        var max = Math.max(x, y),
            diameter = Math.round(Math.sqrt(max * max + max * max));
        return diameter / 2;
    }

    var Star = function() {
        this.orbitRadius = random(maxOrbit(w, h));//轨道半径范围
        this.radius = random(60, this.orbitRadius) / 8;//单个星星的半径
        this.orbitX = w / 2;
        this.orbitY = h / 2;
        this.timePassed = random(0, maxStars);//运行时间
        this.speed = random(this.orbitRadius) / 200000;//移动速度，半径越大，最高速度越大
        this.alpha = random(2, 10) / 10;// 亮度
        count++;
        stars[count] = this;
    }
    // 绘制星星
    Star.prototype.draw = function() {
        /*计算原理：坐标x = 变换的正弦x最大半径（相当于投影） + canvas半宽*/
        var x = Math.sin(this.timePassed) * this.orbitRadius + this.orbitX,
            y = Math.cos(this.timePassed) * this.orbitRadius + this.orbitY,
            twinkle = random(10);
        if (twinkle === 1 && this.alpha > 0) {
            this.alpha -= 0.05;
        } else if (twinkle === 2 && this.alpha < 1) {
            this.alpha += 0.05;
        }
        ctx.globalAlpha = this.alpha;
        ctx.drawImage(canvas2, x - this.radius / 2, y - this.radius / 2, this.radius, this.radius);
        this.timePassed += this.speed;
    }

    for (var i = 0; i < maxStars; i++) {
        new Star();
    }

    function animation() {
        ctx.save();
        ctx.globalCompositeOperation = 'source-over';
        /*通过多次层叠半透明覆盖，实现尾巴效果，globalAlpha数值越低，尾巴越长*/
        ctx.globalAlpha = 0.5;
        ctx.fillStyle = 'hsla(' + hue + ', 64%, 6%, 2)';
        ctx.fillRect(0, 0, w, h)
        ctx.globalCompositeOperation = 'lighter';
        for (var i = 1, l = stars.length; i < l; i++) {
            /*注释代码实现加速飞船穿越效果，即近处的星星往屏幕外边移动至消失，
             远处的星星不断变大，并有新的星星产生*/
            if (stars[i]) {
                stars[i].orbitRadius += 0.002 * stars[i].orbitRadius;
                stars[i].radius += 0.02;
                stars[i].draw();
                if( stars[i].orbitRadius > stars[i].orbitX) {
                	stars[i] = false;
                	stars.push(new Star())
                }
            }
        };
        ctx.restore();
        ctx.drawImage(img, sx, sy, imgWidth, imgHeight);
        window.requestAnimationFrame(animation);
    }
    animation();
}
//-->
</script>

</body>
</html>